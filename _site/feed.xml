<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cristian Cortez</title>
    <description>Serial entrepreneur &amp; Full-stack developer. Trainer on new technologies and creator of @emprendevs
</description>
    <link>https://cortezcristian.github.io/</link>
    <atom:link href="https://cortezcristian.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 14 Dec 2015 12:05:36 -0300</pubDate>
    <lastBuildDate>Mon, 14 Dec 2015 12:05:36 -0300</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Creating an interactive E-learning Platform</title>
        <description>&lt;p&gt;Creating an interactive e-learnig platform like CodeSchool, Codeacademy or Treehouse shouldn’t be that difficult using the MEAN stack. 
Nowadays LMS platforms are kind of a big bussines, I believe at some point this will be a very common tool (like a blog or a cms) and the only differentiator would be the quality of the content you generate.&lt;/p&gt;

&lt;p&gt;Let’s go ahead and setup some goals for the platform:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Should be able to reproduce videos along with presentations&lt;/li&gt;
  &lt;li&gt;Should trigger automated actions from a timeline of events, changing states between lecturing and evaluating&lt;/li&gt;
  &lt;li&gt;Should present code excercises and real time auto-correction&lt;/li&gt;
  &lt;li&gt;Should be able to evaluate unsafe backend code submmitted by the student&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the visual specs:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cortezcristian.github.io/assets/lms/lms-mockup.png&quot; alt=&quot;LMS&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;

&lt;p&gt;Let’s start a new project using &lt;code class=&quot;highlighter-rouge&quot;&gt;anyandgo&lt;/code&gt;, that is just another MEAN framework using Express basic and some cool conventions. You’ll need to install &lt;code class=&quot;highlighter-rouge&quot;&gt;nodejs&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;mongodb&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;anyandgo-cli&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sudo] npm install -g anyandgo-cli&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once you have it, just create a new project:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;anyandgo init lms&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will create a new folder called &lt;code class=&quot;highlighter-rouge&quot;&gt;lms&lt;/code&gt;, to finish setup just do:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;lms &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm install &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; grunt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And we are ready to work!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cortezcristian.github.io/assets/lms/starting-with-anyandgo.png&quot; alt=&quot;Starting with anyandgo&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;classroom&quot;&gt;Classroom&lt;/h2&gt;

&lt;p&gt;The classroom is where the student is going to spend most of the time, so it should be flexible and dinamic. We begin defining its components and doing some assumptions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Video: we can take advantage from YouTUBE API, to host, embed and have a timeline.&lt;/li&gt;
  &lt;li&gt;Presentation: we can include some HTML5 slides made with reveal.js&lt;/li&gt;
  &lt;li&gt;Code Editor: we can use ace.js which is a very mature editor&lt;/li&gt;
  &lt;li&gt;Notifications: we can show toastr notifications in order to inform the student&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;anyandgo&lt;/code&gt; offers support for &lt;code class=&quot;highlighter-rouge&quot;&gt;jade&lt;/code&gt; templates, so inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;views&lt;/code&gt; folder we are going to search for a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;index.jade&lt;/code&gt;, and start modifying it a little bit:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-jade&quot; data-lang=&quot;jade&quot;&gt;extend layout

block content
  .row(style=&quot;margin-top:80px&quot;)
    .col-sm-4
      .video-container Video Here
      .challenge-container Display useful info
    .col-sm-8
      .tabs-container
        .presentation-container HTML5 Presentation
        .webeditor-container Code Editor

block footer&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you are new to &lt;code class=&quot;highlighter-rouge&quot;&gt;jade&lt;/code&gt; you’ll soon realize that is very simple to write and read, you will also notice that for our responsive skeleton we are using &lt;code class=&quot;highlighter-rouge&quot;&gt;bootstrap&lt;/code&gt; that came pre-installed with &lt;code class=&quot;highlighter-rouge&quot;&gt;anyandgo&lt;/code&gt; default template.&lt;/p&gt;

&lt;p&gt;Ok, now let’s go shopping and search some components &lt;a href=&quot;http://bower.io/search/&quot;&gt;bower.io/search&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/brandly/angular-youtube-embed&quot;&gt;angular-youtube-mb&lt;/a&gt; utility to manage YouTUBE API and embed videos&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/angular-ui/ui-ace&quot;&gt;angular-ui-ace&lt;/a&gt; this directive allows you to add ACE editor elements&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cortezcristian/jbrowser&quot;&gt;jbrowser&lt;/a&gt; it will help us to embed the HTML5 presentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s install the modules and include their dependencies, in our root folder &lt;code class=&quot;highlighter-rouge&quot;&gt;./lms&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;bower install --save angular-youtube-mb angular-ui-ace jbrowser
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;grunt wiredep:site&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In that way we download and add all dependencies. In case some bower is unable to find a suitable version for angular, just choose &lt;code class=&quot;highlighter-rouge&quot;&gt;6) angular#* &lt;/code&gt; and enter &lt;code class=&quot;highlighter-rouge&quot;&gt;6!&lt;/code&gt; to persist.&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Dec 2015 23:01:44 -0300</pubDate>
        <link>https://cortezcristian.github.io/update/elearning/2015/12/12/creating-an-interactive-e-learning-platform.html</link>
        <guid isPermaLink="true">https://cortezcristian.github.io/update/elearning/2015/12/12/creating-an-interactive-e-learning-platform.html</guid>
        
        
        <category>update</category>
        
        <category>elearning</category>
        
      </item>
    
  </channel>
</rss>
